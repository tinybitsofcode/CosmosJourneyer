"use strict";(globalThis.webpackChunkcosmos_journeyer=globalThis.webpackChunkcosmos_journeyer||[]).push([["480"],{4006:function(e,n,a){let r;a.r(n),a.d(n,{Dispose:()=>f,DumpData:()=>d,DumpDataAsync:()=>c,DumpFramebuffer:()=>u,DumpTools:()=>m});var t=a(86163),s=a(43618),l=a(87338),i=a(90762);let p=null;async function o(){return p||(p=new Promise((e,n)=>{let s;let l=null,p={preserveDrawingBuffer:!0,depth:!1,stencil:!1,alpha:!0,premultipliedAlpha:!1,antialias:!1,failIfMajorPerformanceCaveat:!1};Promise.resolve().then(a.bind(a,96698)).then(({ThinEngine:o})=>{let u=i.l.Instances.length;try{s=new OffscreenCanvas(100,100),l=new o(s,!1,p)}catch(e){u<i.l.Instances.length&&i.l.Instances.pop()?.dispose(),l=new o(s=document.createElement("canvas"),!1,p)}i.l.Instances.pop(),i.l.OnEnginesDisposedObservable.add(e=>{l&&e!==l&&!l.isDisposed&&0===i.l.Instances.length&&f()}),l.getCaps().parallelShaderCompile=void 0;let c=new t.I(l);a.e("77").then(a.bind(a,95620)).then(({passPixelShader:a})=>{if(!l){n("Engine is not defined");return}let i=new t.H({engine:l,name:a.name,fragmentShader:a.shader,samplerNames:["textureSampler"]});e(r={canvas:s,engine:l,renderer:c,wrapper:i})})}).catch(n)})),await p}async function u(e,n,a,r,t="image/png",s,l){let i=new Uint8Array((await a.readPixels(0,0,e,n)).buffer);d(e,n,i,r,t,s,!0,void 0,l)}function c(e,n,a,r="image/png",t,s=!1,l=!1,i){return new Promise(p=>{d(e,n,a,e=>p(e),r,t,s,l,i)})}function d(e,n,a,r,t="image/png",i,p=!1,u=!1,c){o().then(o=>{if(o.engine.setSize(e,n,!0),a instanceof Float32Array){let e=new Uint8Array(a.length),n=a.length;for(;n--;){let r=a[n];e[n]=Math.round(255*(0,l.Clamp)(r))}a=e}let d=o.engine.createRawTexture(a,e,n,5,!1,!p,1);o.renderer.setViewport(),o.renderer.applyEffectWrapper(o.wrapper),o.wrapper.effect._bindTexture("textureSampler",d),o.renderer.draw(),u?s.w1.ToBlob(o.canvas,e=>{let n=new FileReader;n.onload=e=>{let n=e.target.result;r&&r(n)},n.readAsArrayBuffer(e)},t,c):s.w1.EncodeScreenshotCanvasData(o.canvas,r,t,i,c),d.dispose()})}function f(){r?(r.wrapper.dispose(),r.renderer.dispose(),r.engine.dispose()):p?.then(e=>{e.wrapper.dispose(),e.renderer.dispose(),e.engine.dispose()}),p=null,r=null}let m={DumpData:d,DumpDataAsync:c,DumpFramebuffer:u,Dispose:f};s.w1.DumpData=d,s.w1.DumpDataAsync=c,s.w1.DumpFramebuffer=u}}]);